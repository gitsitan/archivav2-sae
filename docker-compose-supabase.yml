
services:
  db:
    container_name: archivav2-db
    image: supabase/postgres:15.8.1.049
    # image: postgres:15
    restart: unless-stopped
    # volumes:
    #   - ./supabase/db/realtime.sql:/docker-entrypoint-initdb.d/migrations/99-realtime.sql:Z
    #   - ./supabase/db/webhooks.sql:/docker-entrypoint-initdb.d/init-scripts/98-webhooks.sql:Z
    #   - ./supabase/db/roles.sql:/docker-entrypoint-initdb.d/init-scripts/99-roles.sql:Z
    #   - ./supabase/db/jwt.sql:/docker-entrypoint-initdb.d/init-scripts/99-jwt.sql:Z
    #   - ./supabase/db/data:/var/lib/postgresql/data:Z
    #   - ./supabase/db/_supabase.sql:/docker-entrypoint-initdb.d/migrations/97-_supabase.sql:Z
    #   - ./supabase/db/logs.sql:/docker-entrypoint-initdb.d/migrations/99-logs.sql:Z
    #   - ./supabase/db/pooler.sql:/docker-entrypoint-initdb.d/migrations/99-pooler.sql:Z
    #   - db-config:/etc/postgresql-custom
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "postgres",
          "-h",
          "localhost"
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    # depends_on:
      # vector:
      #   condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # POSTGRES_HOST: /var/run/postgresql
      # PGPORT: 5432
      # POSTGRES_PORT: 5432
      # PGPASSWORD: postgres
      # PGDATABASE: postgres
      # JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
      # JWT_EXP: 3600
    ports:
      - "5432:5432"
    command:
      [
        "postgres",
        "-c",
        "config_file=/etc/postgresql/postgresql.conf",
        "-c",
        "log_min_messages=fatal"
      ]
    networks:
      archivav2-network:


  pgadmin:
      image: dpage/pgadmin4:latest
      container_name: archivav2-pgadmin
      restart: unless-stopped
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@archivav2.com
        PGADMIN_DEFAULT_PASSWORD: admin
        PGADMIN_CONFIG_SERVER_MODE: 'False'
      ports:
        - "5050:80"
      volumes:
        - pgadmin_data:/var/lib/pgadmin
      depends_on:
        - db
      networks:
        - archivav2-network

  # vector:
  #   container_name: archivav2-vector
  #   image: timberio/vector:0.28.1-alpine
  #   restart: unless-stopped
  #   volumes:
  #     - ./supabase/logs/vector.yml:/etc/vector/vector.yml:ro,z
  #     - ${DOCKER_SOCKET_LOCATION}:/var/run/docker.sock:ro,z
  #   healthcheck:
  #     test:
  #       [
  #         "CMD",
  #         "wget",
  #         "--no-verbose",
  #         "--tries=1",
  #         "--spider",
  #         "http://vector:9001/health"
  #       ]
  #     timeout: 5s
  #     interval: 5s
  #     retries: 3
  #   environment:
  #     LOGFLARE_API_KEY: ${LOGFLARE_API_KEY}
  #   command:
  #     [
  #       "--config",
  #       "/etc/vector/vector.yml"
  #     ]
  #   security_opt:
  #     - "label=disable"
  #   networks:
  #     archivav2-network:

volumes:
  db-config:
  pgadmin_data:


networks:
  archivav2-network:
    driver: bridge
